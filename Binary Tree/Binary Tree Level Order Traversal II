Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values.
(i.e., from left to right, level by level from leaf to root).

Input: root = [3,9,20,null,null,15,7]
Output: [[15,7],[9,20],[3]]


class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        
        vector<vector<int>> ans;
        if(root == NULL) return ans;
        
        queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty()){
            
            int size = q.size();
            vector<int> temp;
            
            for(int i = 0 ; i < size ; i++){
                
                TreeNode* front = q.front();
                q.pop();
                
                temp.push_back(front -> val);
                
                if(front -> left) q.push(front -> left);
                if(front -> right) q.push(front -> right);
                
            }
            
            ans.push_back(temp);
            
        }
        
        
        reverse(ans.begin(), ans.end());
        
        return ans;
        
    }
};
