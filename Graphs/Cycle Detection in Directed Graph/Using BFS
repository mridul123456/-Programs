//n = no of vertices/nodes

bool checkCycleDetectionBFSinDirectedGraph(int source, map<int, list<int>>& adj, map<int, bool>& visited, vector<int> & indegree, int n){
    
    int cnt = 0 ;
    
    queue<int> q;
    
    for(int i = 0 ; i < n ; i++){
        if(indegree[i] == 0) q.push(i);
    }
    
    while(!q.empty()){
        
        int front = q.front();
        q.pop();
        
        cnt++;
        
        for(auto i : adj[front]){
            indegree[i]--;
            if(indegree[i] == 0){
                q.push(i);
            }
        }
        
    }
    
    //if cnt == n means cycle is not present 
    return (cnt == n) ? false : true;
    
}
