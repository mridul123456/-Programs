//TC = O(N)
//SC = O(1)

#include <bits/stdc++.h>
using namespace std;

struct node{
    int data;
    node* next;
    
    node(int data){
        this->data = data;
        next = NULL;
    }
};

void insertAtHead(node* &head, int data){
    
    node* new_node = new node(data);
    
    if(head == NULL){
        head = new_node;
    }
    else{
        new_node -> next = head;
        head = new_node;
    }
}

void display(node* head){
    
    if( head == NULL){
        cout<<"List is empty"<<endl;
        return;
    }
    
    node* temp = head;
    
    cout<<"Linked List is as folow : "<<endl;
    
    while(temp != NULL){
        cout<<temp -> data<<" ";
        temp = temp -> next;
    }cout<<endl;
    
}

node* mergeList(node* first, node* second){
    
    if(first -> next == NULL){
        first -> next = second;
        return first;
    }
    
    node* curr1 = first, *curr2 = second,
                  *next1 = first -> next, *next2 = second -> next;
    
    while( curr2 != NULL && next1 != NULL ){
        
        if((curr1 -> data <= curr2 -> data) 
             && (curr2 -> data <= next1 -> data)){
                
                curr1 -> next = curr2;
                next2 = curr2 -> next;
                curr2 -> next = next1;
                
                curr1 = curr2;
                curr2 = next2;
                 
             }
        else{
            curr1 = next1;
            next1 = next1 -> next;
            
            if(next1 == NULL){
                curr1->next = curr2;
                return first;
            }
        }
        
    }              
    
    return first;
    
}

int main() {
   
   node *head = NULL;
   
   insertAtHead(head, 4);
   insertAtHead(head, 2);
   insertAtHead(head, 1);
   
   node* head1 = NULL;
   
   insertAtHead(head1, 4);
   insertAtHead(head1, 3);
   insertAtHead(head1, 1);
   
   display(head);
   display(head1);
   
   node* merge = NULL;
   if(head->data < head1 -> data)
     merge = mergeList(head, head1);
   else 
     merge = mergeList(head1, head);
   
  cout<<"Merged List is : "<<endl;
  display(merge);
   

   return 0;
   
}
