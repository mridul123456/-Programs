
#include <bits/stdc++.h>
using namespace std;

struct node{
    int data;
    node* next;
    
    node(int data){
        this->data = data;
        next = NULL;
    }
};

void insertAtHead(node* &head, int data){
    
    node* new_node = new node(data);
    
    if(head == NULL){
        head = new_node;
    }
    else{
        new_node -> next = head;
        head = new_node;
    }
}

void display(node* head){
    
    if( head == NULL){
        cout<<"List is empty"<<endl;
        return;
    }
    
    node* temp = head;
    
    cout<<"Linked List is as folow : "<<endl;
    
    while(temp != NULL){
        cout<<temp -> data<<" ";
        temp = temp -> next;
    }cout<<endl;
    
}

node* reverseKNodes(node* head, int k){
    
    node* temp = head;
    int cnt = 0;
    
    while( temp != NULL){
        temp = temp -> next;
        cnt++;
    }
    
    if(cnt < k) return head;
    
    node* prev = NULL, *curr = head, *next = NULL;
    
    cnt = 0;
    while( curr != NULL && cnt < k ){
        next = curr -> next;
        curr -> next = prev;
        prev = curr;
        curr = next;
        cnt++;
    }
    
    if(curr != NULL){
        head -> next = reverseKNodes(curr, k);
    }
    
    return prev;
    
}



int main() {
   
   node *head = NULL;
   
   insertAtHead(head, -2);
   insertAtHead(head, 1);
   insertAtHead(head, 0);
   insertAtHead(head, 50);
   insertAtHead(head, 10);
   insertAtHead(head, 100);
   
   display(head);
   
   int k = 2;
   head = reverseKNodes(head, k);
   
  cout<<endl<<"After reversing every k nodes in list."<<endl;
  display(head);
   

   return 0;
   
}
