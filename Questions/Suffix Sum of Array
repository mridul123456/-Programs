Suffix Sum is a precomputation technique in which the sum of all the 
elements of the original array from an index i till the end of the array 
is computed.


#include<bits/stdc++.h>
using namespace std;

void findSuffix(vector<int>&arr, vector<int>&suff, int n){
    suff[n - 1] = arr[n - 1];
    
    for(int i = n - 2 ; i >= 0 ; i--){
        suff[i] = suff[i + 1] + arr[i];
    }

}

void display(vector<int> arr){
    
    int n = arr.size();
    for(int i = 0 ; i < n ; i++){
        cout<<arr[i]<<" ";
    }
    
}

int main(){
    
    int n;
    cout<<"Enter the number of elements : ";
    cin>>n;
    vector<int> arr;
    
    cout<<"Enter the elements :";
    for(int i = 0 ; i < n ; i++){
        int x;
        cin>>x;
        arr.push_back(x);
    }
    
    vector<int> suff(n);
    
    findSuffix(arr, suff, n);
    
    cout<<"Entered Array is :";
    display(arr);
    
    cout<<"\nSuffix Arary is :";
    display(suff);
    
    return 0;
}


TC = O(N)
SC = O(1)
