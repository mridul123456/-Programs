#include<bits/stdc++.h>
using namespace std;

bool isRedundant(string s){
    
    stack<char> st;
    
    for(int i = 0 ; i < s.size() ; i++){
        char c = s[i];
        
        if(c == '(' || c == '+' || c == '*' || c == '-' || c == '/') st.push(c);
        else{
            if(c == '('){
                bool isRedundant = true;
                while(!st.empty() || st.top() != '('){
                   int top = st.top();
                   if(top == '+' || top == '*' || top == '-' || top == '/')
                      isRedundant = false;
                   st.pop();      
                }
                if(isRedundant) return true;
                st.pop();
            }
        }
    }
    
    return false;
    
}

int main(){
    
    string s;
    cin>>s;
    
    bool ans = isRedundant(s);
    
    if(ans) cout<<"Given string contains redundant brackets.";
    else cout<<"Given string doesn't contains redundant brackets.";
    
    return 0;
}


O/P : 
(a+b)
Given string doesn't contains redundant brackets.

((a+b))
Given string contains redundant brackets.
